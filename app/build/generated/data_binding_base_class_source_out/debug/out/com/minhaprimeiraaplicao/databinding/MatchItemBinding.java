// Generated by view binder compiler. Do not edit!
package com.minhaprimeiraaplicao.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.minhaprimeiraaplicao.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MatchItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final AppCompatImageView ivAwayTeam;

  @NonNull
  public final AppCompatImageView ivHomeTeam;

  @NonNull
  public final MaterialTextView tvAwayTeamName;

  @NonNull
  public final MaterialTextView tvAwayTeamScore;

  @NonNull
  public final MaterialTextView tvHomeTeamName;

  @NonNull
  public final MaterialTextView tvHomeTeamScore;

  @NonNull
  public final MaterialTextView tvVersus;

  private MatchItemBinding(@NonNull CardView rootView, @NonNull AppCompatImageView ivAwayTeam,
      @NonNull AppCompatImageView ivHomeTeam, @NonNull MaterialTextView tvAwayTeamName,
      @NonNull MaterialTextView tvAwayTeamScore, @NonNull MaterialTextView tvHomeTeamName,
      @NonNull MaterialTextView tvHomeTeamScore, @NonNull MaterialTextView tvVersus) {
    this.rootView = rootView;
    this.ivAwayTeam = ivAwayTeam;
    this.ivHomeTeam = ivHomeTeam;
    this.tvAwayTeamName = tvAwayTeamName;
    this.tvAwayTeamScore = tvAwayTeamScore;
    this.tvHomeTeamName = tvHomeTeamName;
    this.tvHomeTeamScore = tvHomeTeamScore;
    this.tvVersus = tvVersus;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MatchItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MatchItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.match_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MatchItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivAwayTeam;
      AppCompatImageView ivAwayTeam = ViewBindings.findChildViewById(rootView, id);
      if (ivAwayTeam == null) {
        break missingId;
      }

      id = R.id.ivHomeTeam;
      AppCompatImageView ivHomeTeam = ViewBindings.findChildViewById(rootView, id);
      if (ivHomeTeam == null) {
        break missingId;
      }

      id = R.id.tvAwayTeamName;
      MaterialTextView tvAwayTeamName = ViewBindings.findChildViewById(rootView, id);
      if (tvAwayTeamName == null) {
        break missingId;
      }

      id = R.id.tvAwayTeamScore;
      MaterialTextView tvAwayTeamScore = ViewBindings.findChildViewById(rootView, id);
      if (tvAwayTeamScore == null) {
        break missingId;
      }

      id = R.id.tvHomeTeamName;
      MaterialTextView tvHomeTeamName = ViewBindings.findChildViewById(rootView, id);
      if (tvHomeTeamName == null) {
        break missingId;
      }

      id = R.id.tvHomeTeamScore;
      MaterialTextView tvHomeTeamScore = ViewBindings.findChildViewById(rootView, id);
      if (tvHomeTeamScore == null) {
        break missingId;
      }

      id = R.id.tvVersus;
      MaterialTextView tvVersus = ViewBindings.findChildViewById(rootView, id);
      if (tvVersus == null) {
        break missingId;
      }

      return new MatchItemBinding((CardView) rootView, ivAwayTeam, ivHomeTeam, tvAwayTeamName,
          tvAwayTeamScore, tvHomeTeamName, tvHomeTeamScore, tvVersus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
